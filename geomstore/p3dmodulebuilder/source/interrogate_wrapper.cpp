/*
 * This file was generated by:
 * /usr/bin/interrogate -fnames -string -refcount -assert -python-native -S/usr/include/panda3d/parser-inc -S/usr/include/panda3d/ -srcdir . -oc interrogate_wrapper.cpp -od interrogate.in -module geomstore -library geomstore -nomangle -DINTERROGATE -DCPPPARSER -D__STDC__=1 -D__cplusplus=201103L -D__attribute__\(x\)= -D__i386__ ./config_module.h
 *
 */

#include "dtoolbase.h"
#include "interrogate_request.h"
#include "dconfig.h"
#include "pnotify.h"
#include <sstream>
#define PANDA_LIBRARY_NAME_geomstore
#include "py_panda.h"
#include "extension.h"
#include "dcast.h"

#include "./config_module.h"
#include "notifyCategoryProxy.h"
#include "pandabase.h"

#undef _POSIX_C_SOURCE
#undef _XOPEN_SOURCE
#define PY_SSIZE_T_CLEAN 1

#if PYTHON_FRAMEWORK
  #include <Python/Python.h>
#else
  #include "Python.h"
#endif

/**
 * Declarations for exported classes
 */
static const Dtool_TypeDef exports[] = {
  {nullptr, nullptr},
};

/**
 * Extern declarations for imported classes
 */

/**
 * Python wrappers for global functions
 */

/**
 * Module Object Linker ..
 */
void Dtool_geomstore_RegisterTypes() {
  TypeRegistry *registry = TypeRegistry::ptr();
  nassertv(registry != nullptr);
}

void Dtool_geomstore_BuildInstants(PyObject *module) {
  (void) module;
}

static PyMethodDef python_simple_funcs[] = {
  // Support Function For Dtool_types ... for now in each module ??
  {"Dtool_BorrowThisReference", &Dtool_BorrowThisReference, METH_VARARGS, "Used to borrow 'this' pointer (to, from)\nAssumes no ownership."},
  {nullptr, nullptr, 0, nullptr}
};

extern const struct LibraryDef geomstore_moddef = {python_simple_funcs, exports, nullptr};
static InterrogateModuleDef _in_module_def = {
  1546475705,  /* file_identifier */
  "geomstore",  /* library_name */
  "Kshb",  /* library_hash_name */
  "geomstore",  /* module_name */
  "interrogate.in",  /* database_filename */
  nullptr,  /* unique_names */
  0,  /* num_unique_names */
  nullptr,  /* fptrs */
  0,  /* num_fptrs */
  1,  /* first_index */
  1  /* next_index */
};

Configure(_in_configure_geomstore);
ConfigureFn(_in_configure_geomstore) {
  interrogate_request_module(&_in_module_def);
}

