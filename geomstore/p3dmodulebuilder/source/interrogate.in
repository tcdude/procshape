1546909316
3 3
9 geomstore 4 Kshb 9 geomstore 
21
25 9 GeomStore 0 4 46 20 GeomStore::GeomStore 0 2 1 2 0
85
GeomStore::GeomStore(void);
inline GeomStore::GeomStore(GeomStore const &) = default;

26 10 ~GeomStore 0 4 46 21 GeomStore::~GeomStore 0 0 0
28
GeomStore::~GeomStore(void);

27 14 print_vertices 0 4 46 25 GeomStore::print_vertices 0 1 3 0
37
void GeomStore::print_vertices(void);

28 12 print_colors 0 4 46 23 GeomStore::print_colors 0 1 4 0
35
void GeomStore::print_colors(void);

29 15 print_triangles 0 4 46 26 GeomStore::print_triangles 0 1 5 0
38
void GeomStore::print_triangles(void);

30 10 add_vertex 0 4 46 21 GeomStore::add_vertex 0 2 6 7 155
/**
 * Add vertex with position v and color (1.0, 1.0, 1.0, 1.0) to the GeomStore.
 */

/**
 * Add vertex with position v and color c to the GeomStore.
 */
107
int GeomStore::add_vertex(LVecBase3f point);
int GeomStore::add_vertex(LVecBase3f point, LVecBase4f color);

31 12 add_triangle 0 4 46 23 GeomStore::add_triangle 0 1 8 43
/**
 * Add a triangle to the GeomStore.
 */
52
int GeomStore::add_triangle(int v0, int v1, int v2);

32 19 subdivide_triangles 0 4 46 30 GeomStore::subdivide_triangles 0 1 9 143
/**
 * Subdivide triangles s times. This is useful when the triangles already are
 * approximately the same size over the entire GeomStore.
 */
58
void GeomStore::subdivide_triangles(int subdivisions = 1);

33 28 subdivide_triangles_distance 0 4 46 39 GeomStore::subdivide_triangles_distance 0 1 10 202
/**
 * Subdivides triangles until every hypothenuse is <= d (length in model view).
 * Use this when the triangles in GeomStore are of mixed size. Less efficient 
 * than subdivide_triangles(int s).
 */
74
void GeomStore::subdivide_triangles_distance(float target_distance = 2.0);

34 6 extend 0 4 46 17 GeomStore::extend 0 1 11 141
/**
 * Extend this GeomStore with all Vertices and Triangles from other while
 * leaving other intact (New objects are being generated!).
 */
41
void GeomStore::extend(GeomStore *other);

35 9 set_color 0 4 46 20 GeomStore::set_color 0 2 12 13 104
/**
 * Sets the color of all vertices to c
 */

/**
 * Sets the color of all vertices in filter to c
 */
122
void GeomStore::set_color(LVecBase4f color);
void GeomStore::set_color(LVecBase4f color, PointerToArray< int > selection);

36 16 normals_as_color 0 4 46 27 GeomStore::normals_as_color 0 1 14 72
/**
 * Sets the vertex color to the corresponding unit length vector
 */
39
void GeomStore::normals_as_color(void);

37 14 to_unit_sphere 0 4 46 25 GeomStore::to_unit_sphere 0 1 15 51
/**
 * Sets all vertex positions to unit length
 */
37
void GeomStore::to_unit_sphere(void);

38 17 get_p3d_geom_node 0 4 46 28 GeomStore::get_p3d_geom_node 0 1 16 119
/**
 * Returns a Panda3D GeomNode object from the current GeomStore w/o
 * individual vertex normal (flat shading).
 */
85
PointerTo< GeomNode > GeomStore::get_p3d_geom_node(std::string name = "UnnamedGeom");

39 10 operator + 0 4 46 21 GeomStore::operator + 0 2 17 18 0
76
int GeomStore::operator +(float v);
int GeomStore::operator +(LVecBase3f v);

40 10 operator - 0 4 46 21 GeomStore::operator - 0 2 19 20 0
76
int GeomStore::operator -(float v);
int GeomStore::operator -(LVecBase3f v);

41 10 operator * 0 4 46 21 GeomStore::operator * 0 2 21 22 0
76
int GeomStore::operator *(float v);
int GeomStore::operator *(LVecBase3f v);

42 10 operator / 0 4 46 21 GeomStore::operator / 0 2 23 24 0
76
int GeomStore::operator /(float v);
int GeomStore::operator /(LVecBase3f v);

43 20 get_vertex_positions 0 20 46 31 GeomStore::get_vertex_positions 0 0 55
getter for PTA_LVecBase3f GeomStore::_vertex_positions;
59
PTA_LVecBase3f GeomStore::get_vertex_positions(void) const;

44 10 get_colors 0 20 46 21 GeomStore::get_colors 0 0 45
getter for PTA_LVecBase4f GeomStore::_colors;
49
PTA_LVecBase4f GeomStore::get_colors(void) const;

45 20 get_triangle_indices 0 20 46 31 GeomStore::get_triangle_indices 0 0 55
getter for PTA_LVecBase3i GeomStore::_triangle_indices;
59
PTA_LVecBase3i GeomStore::get_triangle_indices(void) const;

24
1 0 0 7 2 53 26 0 0 0 
2 0 0 7 2 53 26 0 0 1 6 param0 0 54  
3 0 0 4 4 56 0 0 0 1 4 this 3 53  
4 0 0 4 5 56 0 0 0 1 4 this 3 53  
5 0 0 4 6 56 0 0 0 1 4 this 3 53  
6 0 0 6 7 59 0 0 86 /**
 * Add vertex with position v and color (1.0, 1.0, 1.0, 1.0) to the GeomStore.
 */ 2 4 this 3 53  5 point 1 57  
7 0 0 6 7 59 0 0 67 /**
 * Add vertex with position v and color c to the GeomStore.
 */ 3 4 this 3 53  5 point 1 57  5 color 1 60  
8 0 0 6 8 59 0 0 43 /**
 * Add a triangle to the GeomStore.
 */ 4 4 this 3 53  2 v0 1 59  2 v1 1 59  2 v2 1 59  
9 0 0 4 9 56 0 0 143 /**
 * Subdivide triangles s times. This is useful when the triangles already are
 * approximately the same size over the entire GeomStore.
 */ 2 4 this 3 53  12 subdivisions 1 59  
10 0 0 4 10 56 0 0 202 /**
 * Subdivides triangles until every hypothenuse is <= d (length in model view).
 * Use this when the triangles in GeomStore are of mixed size. Less efficient 
 * than subdivide_triangles(int s).
 */ 2 4 this 3 53  15 target_distance 1 62  
11 0 0 4 11 56 0 0 141 /**
 * Extend this GeomStore with all Vertices and Triangles from other while
 * leaving other intact (New objects are being generated!).
 */ 2 4 this 3 53  5 other 1 53  
12 0 0 4 12 56 0 0 46 /**
 * Sets the color of all vertices to c
 */ 2 4 this 3 53  5 color 1 60  
13 0 0 4 12 56 0 0 56 /**
 * Sets the color of all vertices in filter to c
 */ 3 4 this 3 53  5 color 1 60  9 selection 1 63  
14 0 0 4 13 56 0 0 72 /**
 * Sets the vertex color to the corresponding unit length vector
 */ 1 4 this 3 53  
15 0 0 4 14 56 0 0 51 /**
 * Sets all vertex positions to unit length
 */ 1 4 this 3 53  
16 0 0 7 15 67 0 0 119 /**
 * Returns a Panda3D GeomNode object from the current GeomStore w/o
 * individual vertex normal (flat shading).
 */ 2 4 this 3 53  4 name 1 66  
17 0 0 6 16 59 0 0 0 2 4 this 3 53  1 v 1 57  
18 0 0 6 16 59 0 0 0 2 4 this 3 53  1 v 1 62  
19 0 0 6 17 59 0 0 0 2 4 this 3 53  1 v 1 57  
20 0 0 6 17 59 0 0 0 2 4 this 3 53  1 v 1 62  
21 0 0 6 18 59 0 0 0 2 4 this 3 53  1 v 1 57  
22 0 0 6 18 59 0 0 0 2 4 this 3 53  1 v 1 62  
23 0 0 6 19 59 0 0 0 2 4 this 3 53  1 v 1 57  
24 0 0 6 19 59 0 0 0 2 4 this 3 53  1 v 1 62  
22
46 9 GeomStore 0 26625 9 GeomStore 9 GeomStore 0 0 0 1 25 26 3 68 69 70 16 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 0 0 0 0 0 0

47 14 PTA_LVecBase3f 0 2105344 14 PTA_LVecBase3f 14 PTA_LVecBase3f 0 0 48 0 0 0 0 0 0 0 0 0 0

48 28 PointerToArray< LVecBase3f > 0 2048 28 PointerToArray< LVecBase3f > 28 PointerToArray< LVecBase3f > 0 0 0 0 0 0 0 0 0 0 0 0 0

49 14 PTA_LVecBase4f 0 2105344 14 PTA_LVecBase4f 14 PTA_LVecBase4f 0 0 50 0 0 0 0 0 0 0 0 0 0

50 37 PointerToArray< UnalignedLVecBase4f > 0 2048 37 PointerToArray< UnalignedLVecBase4f > 37 PointerToArray< UnalignedLVecBase4f > 0 0 0 0 0 0 0 0 0 0 0 0 0

51 14 PTA_LVecBase3i 0 2105344 14 PTA_LVecBase3i 14 PTA_LVecBase3i 0 0 52 0 0 0 0 0 0 0 0 0 0

52 28 PointerToArray< LVecBase3i > 0 2048 28 PointerToArray< LVecBase3i > 28 PointerToArray< LVecBase3i > 0 0 0 0 0 0 0 0 0 0 0 0 0

53 11 GeomStore * 0 8576 11 GeomStore * 11 GeomStore * 0 0 46 0 0 0 0 0 0 0 0 0 0

54 17 GeomStore const * 0 8576 17 GeomStore const * 17 GeomStore const * 0 0 55 0 0 0 0 0 0 0 0 0 0

55 15 GeomStore const 0 8832 15 GeomStore const 15 GeomStore const 0 0 46 0 0 0 0 0 0 0 0 0 0

56 4 void 0 8194 4 void 4 void 0 6 0 0 0 0 0 0 0 0 0 0 0

57 12 LVecBase3f * 0 8576 12 LVecBase3f * 12 LVecBase3f * 0 0 58 0 0 0 0 0 0 0 0 0 0

58 10 LVecBase3f 0 2048 10 LVecBase3f 10 LVecBase3f 0 0 0 0 0 0 0 0 0 0 0 0 77
/**
 * This is the base class for all three-component vectors and points.
 */

59 3 int 0 8194 3 int 3 int 0 1 0 0 0 0 0 0 0 0 0 0 0

60 12 LVecBase4f * 0 8576 12 LVecBase4f * 12 LVecBase4f * 0 0 61 0 0 0 0 0 0 0 0 0 0

61 10 LVecBase4f 0 2048 10 LVecBase4f 10 LVecBase4f 0 0 0 0 0 0 0 0 0 0 0 0 77
/**
 * This is the base class for all three-component vectors and points.
 */

62 5 float 0 8194 5 float 5 float 0 2 0 0 0 0 0 0 0 0 0 0 0

63 23 PointerToArray< int > * 0 8576 23 PointerToArray< int > * 23 PointerToArray< int > * 0 0 64 0 0 0 0 0 0 0 0 0 0

64 21 PointerToArray< int > 0 2048 21 PointerToArray< int > 21 PointerToArray< int > 0 0 0 0 0 0 0 0 0 0 0 0 0

65 8 GeomNode 0 2048 8 GeomNode 8 GeomNode 0 0 0 0 0 0 0 0 0 0 0 0 208
/**
 * A node that holds Geom objects, renderable pieces of geometry.  This is the
 * primary kind of leaf node in the scene graph; almost all visible objects
 * will be contained in a GeomNode somewhere.
 */

66 13 atomic string 0 2 13 atomic string 13 atomic string 0 7 0 0 0 0 0 0 0 0 0 0 0

67 10 GeomNode * 0 8576 10 GeomNode * 10 GeomNode * 0 0 65 0 0 0 0 0 0 0 0 0 0

0
3
68 17 _vertex_positions 0 2 47 43 0 0 0 0 0 0 0 28 GeomStore::_vertex_positions 0

69 7 _colors 0 2 49 44 0 0 0 0 0 0 0 18 GeomStore::_colors 0

70 17 _triangle_indices 0 2 51 45 0 0 0 0 0 0 0 28 GeomStore::_triangle_indices 0

0
